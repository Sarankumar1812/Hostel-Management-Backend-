import pdfkit from "pdfkit";

// A function to create PDF based on report type and data
const createPdf = async (type, data) => {
  return new Promise((resolve, reject) => {
    const doc = new pdfkit();
    let buffers = [];

    // Collect PDF buffers
    doc.on("data", buffers.push.bind(buffers));
    doc.on("end", () => resolve(Buffer.concat(buffers)));

    // Set basic styling for the PDF
    doc.fontSize(14).font("Helvetica-Bold").text("Report", { align: "center" });
    doc.moveDown(2);

    // Add some space
    doc.fontSize(12).font("Helvetica");

    if (type === "expense") {
      // Add a styled title
      doc
        .fontSize(18)
        .font("Helvetica-Bold")
        .text("Expense Report", { align: "center" });
      doc.moveDown(1);

      // Table header
      doc
        .fontSize(12)
        .font("Helvetica-Bold")
        .text("Date", { continued: true })
        .text("Amount", { align: "right" });
      doc.moveDown(0.5);

      // Add expense data
      data.forEach((expense) => {
        doc
          .fontSize(12)
          .font("Helvetica")
          .text(`${expense.date}`, { continued: true })
          .text(`$${expense.amount}`, { align: "right" });
        doc.moveDown(0.3);
      });
    }

    if (type === "revenue") {
      // Add a styled title
      doc
        .fontSize(18)
        .font("Helvetica-Bold")
        .text("Revenue Report", { align: "center" });
      doc.moveDown(1);

      // Destructure revenue data
      const {
        totalBasePriceRevenue,
        totalTaxRevenue,
        totalMaintenanceChargeRevenue,
        totalRevenue,
      } = data[0].revenue;

      // Display revenue data with some styling
      doc
        .fontSize(14)
        .font("Helvetica")
        .text("Total Base Price Revenue:", { continued: true });
      doc
        .fontSize(16)
        .font("Helvetica-Bold")
        .text(`$${totalBasePriceRevenue}`, { align: "right" });
      doc.moveDown(0.5);

      doc
        .fontSize(14)
        .font("Helvetica")
        .text("Total Tax Revenue:", { continued: true });
      doc
        .fontSize(16)
        .font("Helvetica-Bold")
        .text(`$${totalTaxRevenue}`, { align: "right" });
      doc.moveDown(0.5);

      doc
        .fontSize(14)
        .font("Helvetica")
        .text("Total Maintenance Charge Revenue:", { continued: true });
      doc
        .fontSize(16)
        .font("Helvetica-Bold")
        .text(`$${totalMaintenanceChargeRevenue}`, { align: "right" });
      doc.moveDown(0.5);

      doc
        .fontSize(14)
        .font("Helvetica")
        .text("Total Revenue:", { continued: true });
      doc
        .fontSize(16)
        .font("Helvetica-Bold")
        .text(`$${totalRevenue}`, { align: "right" });
    }


    // Add some footer text
    doc.moveDown(2);
    doc
      .fontSize(10)
      .font("Helvetica")
      .text("Generated by Hotel Management System", { align: "center" });

    doc.end();
  });
};

export default createPdf;
